// Generated by CoffeeScript 2.0.2
var TerminalRenderer, TextMap, figlet;

figlet = require('figlet');

TextMap = require('./textmap');

module.exports = TerminalRenderer = class TerminalRenderer {
    constructor(width1 = process.stdout.columns, height1 = process.stdout.rows, background = '') {
        this.drawObject = this.drawObject.bind(this);
        this.drawText = this.drawText.bind(this);
        this.drawBigText = this.drawBigText.bind(this);
        this.drawBox = this.drawBox.bind(this);
        this.flush = this.flush.bind(this);
        this.width = width1;
        this.height = height1;
        this.background = background;
        this.map = new TextMap(this.width, this.height);
        this.map.set(0, 0, this.background, false);
    }

    drawObject(obj) {
        return this.map.set(obj.x, obj.y, obj.sprite.data, obj.sprite.masked);
    }

    drawText(x, y, text) {
        return this.map.set(x, y, text);
    }

    drawBigText(x, y, text, font = null, masked = true) {
        return this.map.set(x, y, figlet.textSync(text, font && `figlet/${font}`), masked);
    }

    drawBox(x, y, width, height, style = {
        corner: '+',
        horz: '-',
        vert: '|',
        mid: ' '
    }) {
        var box, c, h, i, m, ref, v;
        c = style.corner;
        h = style.horz;
        v = style.vert;
        m = style.mid;
        box = [c + h.repeat(Math.max(width - 2, 0)) + (width > 1 ? c : '')];
        for (h = i = 0, ref = --height; 0 <= ref ? i < ref : i > ref; h = 0 <= ref ? ++i : --i) {
            box.push(v + m.repeat(Math.max(width - 2, 0)) + (width > 1 ? v : ''));
        }
        if (height > 0) {
            box.push(c + h.repeat(Math.max(width - 2, 0)) + (width > 1 ? c : ''));
        }
        return this.map.set(x, y, box.join('\n'));
    }

    flush(line_separator = '\n') {
        var res;
        res = this.map.render(line_separator);
        this.map.clear();
        this.map.set(0, 0, this.background, false);
        return res;
    }

};